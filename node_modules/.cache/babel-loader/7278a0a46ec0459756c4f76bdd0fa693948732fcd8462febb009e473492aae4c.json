{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar sortPropertyEnum;\n(function (sortPropertyEnum) {\n  sortPropertyEnum[\"RATING_DESC\"] = \"rating\";\n  sortPropertyEnum[\"RATING_ASC\"] = \"-rating\";\n  sortPropertyEnum[\"TITLE_DESC\"] = \"title\";\n  sortPropertyEnum[\"TITLE_ASC\"] = \"-title\";\n  sortPropertyEnum[\"PRICE_DESC\"] = \"price\";\n  sortPropertyEnum[\"PRICE_ASC\"] = \"-price\";\n})(sortPropertyEnum || (sortPropertyEnum = {}));\nconst initialState = {\n  searchValue: \"\",\n  categoryId: 0,\n  currentPage: 1,\n  sort: {\n    name: \"популярності\",\n    sortProperty: sortPropertyEnum.RATING_DESC\n  }\n};\nconst filterSlice = createSlice({\n  name: \"filters\",\n  initialState,\n  reducers: {\n    setCategoryId(state, action) {\n      state.categoryId = action.payload;\n    },\n    setSearchValue(state, action) {\n      state.searchValue = action.payload;\n    },\n    setSort(state, action) {\n      state.sort = action.payload;\n    },\n    setCurrentPage(state, action) {\n      state.currentPage = action.payload;\n    },\n    setFilters(state, action) {\n      if (Object.keys(action.payload).length) {\n        state.currentPage = Number(action.payload.currentPage);\n        state.categoryId = Number(action.payload.categoryId);\n        state.sort = action.payload.sort;\n      } else {\n        state.currentPage = 1;\n        state.categoryId = 0;\n        state.sort = {\n          name: \"популярності\",\n          sortProperty: sortPropertyEnum.RATING_DESC\n        };\n      }\n    }\n  }\n});\nexport const selectFilter = state => state.filter;\nexport const {\n  setCategoryId,\n  setSort,\n  setCurrentPage,\n  setFilters,\n  setSearchValue\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","sortPropertyEnum","initialState","searchValue","categoryId","currentPage","sort","name","sortProperty","RATING_DESC","filterSlice","reducers","setCategoryId","state","action","payload","setSearchValue","setSort","setCurrentPage","setFilters","Object","keys","length","Number","selectFilter","filter","actions","reducer"],"sources":["C:/Disc D/Програмування 2.0/reactJS/react_varenuk/react-varenuk/src/redux/slices/filterSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\n\r\nenum sortPropertyEnum {\r\n  RATING_DESC = \"rating\",\r\n  RATING_ASC = \"-rating\",\r\n  TITLE_DESC = \"title\",\r\n  TITLE_ASC = \"-title\",\r\n  PRICE_DESC = \"price\",\r\n  PRICE_ASC = \"-price\",\r\n}\r\n\r\nexport type Sort = {\r\n  name: string;\r\n  sortProperty: sortPropertyEnum;\r\n};\r\n\r\nexport interface FilterSliceState {\r\n  searchValue: string;\r\n  categoryId: number;\r\n  currentPage: number;\r\n  sort: Sort;\r\n}\r\n\r\nconst initialState: FilterSliceState = {\r\n  searchValue: \"\",\r\n  categoryId: 0,\r\n  currentPage: 1,\r\n  sort: {\r\n    name: \"популярності\",\r\n    sortProperty: sortPropertyEnum.RATING_DESC,\r\n  },\r\n};\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filters\",\r\n  initialState,\r\n  reducers: {\r\n    setCategoryId(state, action: PayloadAction<number>) {\r\n      state.categoryId = action.payload;\r\n    },\r\n    setSearchValue(state, action: PayloadAction<string>) {\r\n      state.searchValue = action.payload;\r\n    },\r\n    setSort(state, action: PayloadAction<Sort>) {\r\n      state.sort = action.payload;\r\n    },\r\n    setCurrentPage(state, action: PayloadAction<number>) {\r\n      state.currentPage = action.payload;\r\n    },\r\n    setFilters(state, action: PayloadAction<FilterSliceState>) {\r\n      if (Object.keys(action.payload).length) {\r\n        state.currentPage = Number(action.payload.currentPage);\r\n        state.categoryId = Number(action.payload.categoryId);\r\n        state.sort = action.payload.sort;\r\n      } else {\r\n        state.currentPage = 1;\r\n        state.categoryId = 0;\r\n        state.sort = {\r\n          name: \"популярності\",\r\n          sortProperty: sortPropertyEnum.RATING_DESC,\r\n        };\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectFilter = (state: RootState) => state.filter;\r\n\r\nexport const {\r\n  setCategoryId,\r\n  setSort,\r\n  setCurrentPage,\r\n  setFilters,\r\n  setSearchValue,\r\n} = filterSlice.actions;\r\n\r\nexport default filterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAAC,IAGzDC,gBAAgB;AAAA,WAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;AAAA,GAAhBA,gBAAgB,KAAhBA,gBAAgB;AAqBrB,MAAMC,YAA8B,GAAG;EACrCC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,IAAI,EAAE;IACJC,IAAI,EAAE,cAAc;IACpBC,YAAY,EAAEP,gBAAgB,CAACQ;EACjC;AACF,CAAC;AAED,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BO,IAAI,EAAE,SAAS;EACfL,YAAY;EACZS,QAAQ,EAAE;IACRC,aAAa,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAClDD,KAAK,CAACT,UAAU,GAAGU,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,cAAc,CAACH,KAAK,EAAEC,MAA6B,EAAE;MACnDD,KAAK,CAACV,WAAW,GAAGW,MAAM,CAACC,OAAO;IACpC,CAAC;IACDE,OAAO,CAACJ,KAAK,EAAEC,MAA2B,EAAE;MAC1CD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDG,cAAc,CAACL,KAAK,EAAEC,MAA6B,EAAE;MACnDD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDI,UAAU,CAACN,KAAK,EAAEC,MAAuC,EAAE;MACzD,IAAIM,MAAM,CAACC,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC,CAACO,MAAM,EAAE;QACtCT,KAAK,CAACR,WAAW,GAAGkB,MAAM,CAACT,MAAM,CAACC,OAAO,CAACV,WAAW,CAAC;QACtDQ,KAAK,CAACT,UAAU,GAAGmB,MAAM,CAACT,MAAM,CAACC,OAAO,CAACX,UAAU,CAAC;QACpDS,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAACT,IAAI;MAClC,CAAC,MAAM;QACLO,KAAK,CAACR,WAAW,GAAG,CAAC;QACrBQ,KAAK,CAACT,UAAU,GAAG,CAAC;QACpBS,KAAK,CAACP,IAAI,GAAG;UACXC,IAAI,EAAE,cAAc;UACpBC,YAAY,EAAEP,gBAAgB,CAACQ;QACjC,CAAC;MACH;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMe,YAAY,GAAIX,KAAgB,IAAKA,KAAK,CAACY,MAAM;AAE9D,OAAO,MAAM;EACXb,aAAa;EACbK,OAAO;EACPC,cAAc;EACdC,UAAU;EACVH;AACF,CAAC,GAAGN,WAAW,CAACgB,OAAO;AAEvB,eAAehB,WAAW,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}